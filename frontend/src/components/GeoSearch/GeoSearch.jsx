import React, { useState } from 'react'
import { searchAPI, uploadAPI } from '../../services/api.js'  // –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Ç—å
import './GeoSearch.css'

const GeoSearch = () => {
  const [searchType, setSearchType] = useState('coords')
  const [searchResults, setSearchResults] = useState([])
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [success, setSuccess] = useState('')

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
  const [coordData, setCoordData] = useState({
    latitude: '',
    longitude: '',
    radius: '1000'
  })

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  const [fileData, setFileData] = useState({
    files: []
  })

  const handleCoordSearch = async (e) => {
    e.preventDefault()
    setLoading(true)
    setError('')
    setSuccess('')

    try {
      const response = await searchAPI.searchByCoords(
        coordData.latitude,
        coordData.longitude,
        coordData.radius
      )
      setSearchResults(response.data.results || [])
      setSuccess(`–ù–∞–π–¥–µ–Ω–æ ${response.data.results?.length || 0} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`)
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.')
      setSearchResults([])
    } finally {
      setLoading(false)
    }
  }

  const handleFileUpload = async (e) => {
    e.preventDefault()
    if (fileData.files.length === 0) {
      setError('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏')
      return
    }

    setLoading(true)
    setError('')
    setSuccess('')

    try {
      const response = await uploadAPI.uploadFiles(fileData.files)
      setSuccess('–§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')

      // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      if (response.data && response.data.length > 0) {
        const searchResponse = await searchAPI.searchImages({
          uploaded_files: response.data.map(file => file.id)
        })
        setSearchResults(searchResponse.data.results || [])
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤')
    } finally {
      setLoading(false)
    }
  }

  const handleFileChange = (e) => {
    setFileData({
      files: Array.from(e.target.files)
    })
  }

  const handleCoordChange = (e) => {
    setCoordData({
      ...coordData,
      [e.target.name]: e.target.value
    })
  }

  return (
    <div className="geo-search">
      <h2>üîç –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –≥–µ–æ–¥–∞–Ω–Ω—ã–º</h2>

      <div className="search-type-selector">
        <button
          className={`type-btn ${searchType === 'coords' ? 'active' : ''}`}
          onClick={() => setSearchType('coords')}
        >
          üìç –ü–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        </button>
        <button
          className={`type-btn ${searchType === 'file' ? 'active' : ''}`}
          onClick={() => setSearchType('file')}
        >
          üìÅ –ü–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        </button>
      </div>

      {error && <div className="error-message">{error}</div>}
      {success && <div className="success-message">{success}</div>}

      <div className="search-forms">
        {searchType === 'coords' && (
          <form onSubmit={handleCoordSearch} className="search-form">
            <div className="form-row">
              <div className="form-group">
                <label>–®–∏—Ä–æ—Ç–∞ (latitude):</label>
                <input
                  type="number"
                  step="any"
                  name="latitude"
                  value={coordData.latitude}
                  onChange={handleCoordChange}
                  placeholder="55.7558"
                  required
                />
              </div>

              <div className="form-group">
                <label>–î–æ–ª–≥–æ—Ç–∞ (longitude):</label>
                <input
                  type="number"
                  step="any"
                  name="longitude"
                  value={coordData.longitude}
                  onChange={handleCoordChange}
                  placeholder="37.6173"
                  required
                />
              </div>

              <div className="form-group">
                <label>–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ (–º–µ—Ç—Ä—ã):</label>
                <input
                  type="number"
                  name="radius"
                  value={coordData.radius}
                  onChange={handleCoordChange}
                  placeholder="1000"
                  min="100"
                  max="100000"
                />
              </div>
            </div>

            <button type="submit" disabled={loading} className="search-button">
              {loading ? '–ü–æ–∏—Å–∫...' : 'üîç –ù–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'}
            </button>
          </form>
        )}

        {searchType === 'file' && (
          <form onSubmit={handleFileUpload} className="search-form">
            <div className="form-group">
              <label>–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</label>
              <input
                type="file"
                accept="image/*"
                multiple
                onChange={handleFileChange}
                required
              />
              <small>–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤</small>
            </div>

            <button type="submit" disabled={loading} className="search-button">
              {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –Ω–∞–π—Ç–∏'}
            </button>
          </form>
        )}
      </div>

      {loading && <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>}

      {searchResults.length > 0 && (
        <div className="search-results">
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ({searchResults.length})</h3>
          <div className="images-grid">
            {searchResults.map((image, index) => (
              <div key={index} className="image-card">
                {image.download_url ? (
                  <img
                    src={image.download_url}
                    alt={image.filename || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}
                    onError={(e) => {
                      e.target.src = 'https://via.placeholder.com/250x200?text=No+Image'
                    }}
                  />
                ) : (
                  <div className="no-image">üì∑ –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
                )}
                <div className="image-info">
                  <h4>{image.filename || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h4>
                  <div className="image-meta">
                    {image.latitude && image.longitude && (
                      <div>üìç {image.latitude}, {image.longitude}</div>
                    )}
                    {image.address && (
                      <div>üè† {image.address}</div>
                    )}
                    {image.created_at && (
                      <div>üìÖ {new Date(image.created_at).toLocaleDateString()}</div>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {searchResults.length === 0 && !loading && (
        <div className="no-results">
          <p>–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.</p>
        </div>
      )}
    </div>
  )
}

export default GeoSearch